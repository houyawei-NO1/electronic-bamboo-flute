C251 COMPILER V5.60.0,  ebf_control                                                        20/07/24  16:19:20  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE ebf_control
OBJECT MODULE PLACED IN .\Objects\ebf_control.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE usr\ebf_control.c XSMALL INTR2 BROWSE DEBUG PRINT(.\Listings\ebf_contr
                    -ol.lst) OBJECT(.\Objects\ebf_control.obj) 

stmt  level    source

    1          #include "ebf_control.h"
    2          
    3          void    controlbeep(void)
    4          {
    5   1      
    6   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==0)) //diyin sol
    7   1                      {
    8   2                      PWM_config(Sound_Fre[0][4]);
    9   2                      printf("diyin sol\r\n");
   10   2                      }
   11   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1)) //diyin la
   12   1                      {
   13   2                      PWM_config(Sound_Fre[0][5]);
   14   2                      printf("diyin 2\r\n");
   15   2                      }
   16   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==1)) //diyin si
   17   1                      {
   18   2                      PWM_config(Sound_Fre[0][6]);
   19   2                      printf("diyin 3\r\n");
   20   2                      }
   21   1              
   22   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin do
   23   1                      {
   24   2                      PWM_config(Sound_Fre[1][0]);
   25   2                      printf("yin 1\r\n");
   26   2                      }
   27   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin re
   28   1                      {
   29   2                      PWM_config(Sound_Fre[1][1]);
   30   2                      printf("yin 2\r\n");
   31   2                      }
   32   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin mi
   33   1                      {
   34   2                      PWM_config(Sound_Fre[1][2]);  
   35   2                      printf("yin 3\r\n");
   36   2                      }
   37   1              if( (low_f==1) && (high_f==1) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1))//zhongyin fa
   38   1                      {
   39   2                      PWM_config(Sound_Fre[1][3]);  
   40   2                      printf("yin 4\r\n");
   41   2                      }
   42   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==0)) //zhongyin sol
   43   1                      {
   44   2                      PWM_config(Sound_Fre[1][4]);
   45   2                      printf("yin 5\r\n");
   46   2                      }
   47   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1))//zhongyin la
   48   1                      {
   49   2                      PWM_config(Sound_Fre[1][5]);
C251 COMPILER V5.60.0,  ebf_control                                                        20/07/24  16:19:20  PAGE 2   

   50   2                      printf("yin 6\r\n");
   51   2                      }
   52   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==1)) //zhongyin si
   53   1                      {
   54   2                      PWM_config(Sound_Fre[1][6]);
   55   2                      printf("yin 7\r\n");
   56   2                      }
   57   1              
   58   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin do
   59   1                      {
   60   2                      PWM_config(Sound_Fre[2][0]);
   61   2                      printf("gaoyin 1\r\n");
   62   2                      }
   63   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin re
   64   1                      {
   65   2                      PWM_config(Sound_Fre[2][1]);
   66   2                      printf("gaoyin 2\r\n");
   67   2                      }
   68   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin mi
   69   1                      {
   70   2                      PWM_config(Sound_Fre[2][2]);  
   71   2                      printf("gaoyin 3\r\n");
   72   2                      }
   73   1              if( (low_f==1) && (high_f==0) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1))//gaoyiin fa
   74   1                      {
   75   2                      PWM_config(Sound_Fre[2][3]);  
   76   2                      printf("gaoyin 4\r\n");
   77   2                      }
   78   1              if( (low_f==1) && (high_f==0) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==0)) //gaoyiin sol
   79   1                      {
   80   2                      PWM_config(Sound_Fre[2][4]);
   81   2                      printf("gaoyin 5\r\n");
   82   2                      }
   83   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==0) && (two_f==0) 
             -&& (one_f==1)) //gaoyiin la
   84   1                      {
   85   2                      PWM_config(Sound_Fre[2][5]);
   86   2                      printf("gaoyin 6\r\n");
   87   2                      }
   88   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==1) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==0)) //gaoyiin si
   89   1                      {
   90   2                      PWM_config(Sound_Fre[2][6]);
   91   2                      printf("gaoyin 7\r\n");
   92   2                      }
   93   1                      
   94   1              if( (low_f==1) && (high_f==1) && (six_f==1) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin re
   95   1                      {
   96   2                      PWM_config(0);
   97   2                      printf("turn off\r\n");
   98   2                      }
   99   1      //              printf("low_f:%hd\r\n",low_f);
  100   1      //              printf("high_f:%hd\r\n",high_f);
  101   1      //              printf("six_f:%hd\r\n",six_f);
  102   1      //              printf("five_f:%hd\r\n",five_f);
  103   1      //              printf("four_f:%hd\r\n",four_f);
  104   1      //              printf("three_f:%hd\r\n",three_f);
  105   1      //              printf("two_f:%hd\r\n",two_f);
  106   1      //              printf("one_f:%hd\r\n",one_f);
C251 COMPILER V5.60.0,  ebf_control                                                        20/07/24  16:19:20  PAGE 3   

  107   1                      
  108   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1379     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       176     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
